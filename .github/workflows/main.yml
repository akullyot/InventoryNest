name: Deploy Express App

# Controls when the action will run.
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Deploy using ssh
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          cd InventoryNest
          git pull origin main
          # Create config.json file with secrets
          echo '{
            "development": {
              "username": "${{ secrets.DB_USERNAME }}",
              "password": "${{ secrets.DB_PASSWORD }}",
              "database": "${{ secrets.DB_DATABASE }}",
              "host": "${{ secrets.DB_HOST }}",
              "dialect": "${{ secrets.DB_DIALECT }}"
            },
            "test": {
              "username": "${{ secrets.DB_USERNAME }}",
              "password": "${{ secrets.DB_PASSWORD }}",
              "database": "${{ secrets.DB_DATABASE }}",
              "host": "${{ secrets.DB_HOST }}",
              "dialect": "${{ secrets.DB_DIALECT }}"
            },
            "production": {
              "username": "${{ secrets.DB_USERNAME }}",
              "password": "${{ secrets.DB_PASSWORD }}",
              "database": "${{ secrets.DB_DATABASE }}",
              "host": "${{ secrets.DB_HOST }}",
              "dialect": "${{ secrets.DB_DIALECT }}"
            }
          }' > config/config.json
          # Create or overwrite .env file with environment variables
          echo "PG_URI=${{ secrets.PG_URI }}" > .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACESS_KEY=${{ secrets.AWS_SECRET_ACESS_KEY }}" >> .env
          echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> .env
          echo "ADDRESS_API_KEY=${{ secrets.ADDRESS_API_KEY }}" >> .env
          # Install dependencies and start the application
          npm install --only=prod
          pm2 reload InventoryNest || pm2 start server.js --name InventoryNest --watch
